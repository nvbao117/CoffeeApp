<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPq8AAD6vAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAJwAAACgAAAAmAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAA
        ACcAAAAnAAAAJwAAACcAAAAnAAAAJgAAACsAAAARAAAAAAAAAAMAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAKsAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAAAP8AAABUAAAAQwAAAEgAAABHAAAARwAA
        AEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAASQAAADoAAADRAAAA0QAAABgAAAAlAAAAIwAA
        ACMAAAAjAAAAJQAAACIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAA/wAAABQAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAK4AAAD/AAAA+wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAD4AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAGcAAAD/AAAAFwAA
        AAAAAAAFAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAYAAAAAAAAAuQAA
        AOEAAABIAAAAVQAAAFMAAABVAAAATQAAAG0AAAD/AAAATQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAZwAA
        AP8AAAAUAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAAC9AAAAywAAAAAAAAACAAAAAAAAAAIAAAAAAAAAKAAAAP8AAABMAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAABnAAAA/wAAABQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAALwAAADMAAAAAAAAAAYAAAAEAAAABgAAAAAAAAArAAAA/wAAAE0AAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAGcAAAD/AAAAFQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAxAAAAMoAAAAAAAAAAgAAAAAAAAACAAAAAAAAACkAAAD/AAAATQAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAXwAAAP8AAAAdAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADeAAAAvgAAAAAAAAADAAAAAAAAAAIAAAAAAAAAKQAA
        AP8AAABNAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAA2AAAA/wAAAEwAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFgAAAP8AAACPAAAAAAAAAAQAAAAAAAAAAgAA
        AAAAAAAxAAAA/wAAAEcAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAEAAADiAAAAwAAAAAAAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABwAAAAAAAABiAAAA/wAAAD0AAAAAAAAAAwAA
        AAAAAAAFAAAAAAAAAGIAAAD/AAAAJQAAAAAAAAACAAAAAAAAAAAAAAADAAAAAAAAAFgAAAD/AAAAewAA
        AAAAAAACAAAAAwAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAgAAAAIAAAAAAAAALgAAAPoAAAC8AAAAAAAA
        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
        AAUAAAAAAAAAXwAAAP8AAAAbAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAMQAA
        ANQAAAD/AAAA+gAAAOoAAAD2AAAA/wAAAOcAAABIAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAWgAAAK0AAADFAAAA/wAAAKwAAACmAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAAwAAAEIAAACLAAAApgAAAJMAAABPAAAACAAAAAAAAAADAAAAAAAAAAIAAAAEAAAABAAA
        AAQAAAADAAAABAAAAAAAAAB8AAAA6wAAAOcAAAD/AAAA4AAAAOgAAABBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAXwAAAP8AAAAbAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABAAAAAQAAAAEAAAABAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABSAAAA+gAAABQAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAn/+n/4AACAuAAAlLgAAAC4v+QAuIAEALi/5Ii4v+SIuL/kiLif5Ii4r4
        iIuJIIqLRAEQkyEkERMQAAAjSAAAV6AAAJeIiCRPkQRCT5IKKi+yciIvsnIiK5IqJEWRBBhLkKQAQcgg
        gEXUASUB6AKBAeSpJ0X6Av1F/8/9Sf///0U=
</value>
  </data>
</root>